# AUTOGENERATED! DO NOT EDIT! File to edit: ../../nbs/f_10_dataloaders/11_distribution_loaders.ipynb.

# %% auto 0
__all__ = ['BaseDistributionDataLoader', 'NormalDistributionDataLoader']

# %% ../../nbs/f_10_dataloaders/11_distribution_loaders.ipynb 3
import numpy as np
from abc import ABC, abstractmethod
from typing import Union

from .base import BaseDataLoader

# %% ../../nbs/f_10_dataloaders/11_distribution_loaders.ipynb 4
class BaseDistributionDataLoader(BaseDataLoader):
    def __init__(self):
        self.is_distribution = True
        super().__init__()

# %% ../../nbs/f_10_dataloaders/11_distribution_loaders.ipynb 5
class NormalDistributionDataLoader(BaseDistributionDataLoader):
    
    def __init__(self,
        mean: float,
        std: float,
        num_units: int,
        truncated_low: int = 0,
        truncated_high: int = None
    ):
        self.num_units = num_units
        self.mean = mean
        self.std = std
        self.truncated_low = truncated_low
        self.truncated_high = truncated_high

        self.val_index_start = 0 # No special validation set, necessary such that dataloader.val() does not throw an error
        self.test_index_start = 0  # No special test set, necessary such that dataloader.test() does not throw an error
        
        super().__init__()
    
    def __getitem__(self, idx):

        Y = np.random.normal(self.mean, self.std, self.num_units)

        if self.truncated_low is not None:
            Y = np.maximum(Y, self.truncated_low)
        if self.truncated_high is not None:
            Y = np.minimum(Y, self.truncated_high)

        return None, Y

    def __len__(self):
        raise ValueError('Length of a distribution is not defined')

    @property
    def X_shape(self):
        return None

    @property
    def Y_shape(self):
        return (1, self.num_units)
 
    def get_all_X(self):

        """
        Returns the entire features dataset. If no X data is available, return None.
        """
        return None

    def get_all_Y(self):

        """
        Returns the entire target dataset. If no Y data is available, return None.
        """
        return None
