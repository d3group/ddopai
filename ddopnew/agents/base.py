# AUTOGENERATED! DO NOT EDIT! File to edit: ../../nbs/40_base_agents/10_base_agents.ipynb.

# %% auto 0
__all__ = ['BaseAgent']

# %% ../../nbs/40_base_agents/10_base_agents.ipynb 4
from abc import ABC, abstractmethod
from typing import Union
import numpy as np

from ..envs.base import BaseEnvironment

# # TEMPORARY
# from sklearn.utils.validation import check_array
# import numbers

# %% ../../nbs/40_base_agents/10_base_agents.ipynb 5
class BaseAgent():

    train_mode = "direct_fit" # or "epochs_fit" or "env_interaction"
    
    def __init__(self, environment_info):
        self.environment_info = environment_info
        self.mode = "train"
        self.print = False # can be used for debugging

    @abstractmethod
    def draw_action(self, observation):
        pass

    def train(self):
        self.mode = "train"
        
    def eval(self):
        self.mode = "eval"

    def flatten_X(self, X):

        """

        Function to flatten the time-dimension of the feature matrix
        for agents that require a 2D input.
        
        
        Args:
            X (np.ndarray): The input data to be flattened.

        Returns:
            _type_: _description_
        """



        if X.ndim == 3:
            return X.reshape(X.shape[0], -1)
        else:
            return X
        
